{"name":"Violation-comments-to-GitHub-jenkins-plugin","tagline":"Jenkins plugin that comments GitHub pull requests with code analyzer comments.","body":"# Violation Comments to GitHub Jenkins Plugin\r\n\r\nTravis CI: [![Build Status](https://travis-ci.org/tomasbjerre/violation-comments-to-github-jenkins-plugin.svg?branch=master)](https://travis-ci.org/tomasbjerre/violation-comments-to-github-jenkins-plugin)\r\n\r\nCloudBees: [![Build Status](https://jenkins.ci.cloudbees.com/job/plugins/job/violation-comments-to-github-plugin/badge/icon)](https://jenkins.ci.cloudbees.com/job/plugins/job/violation-comments-to-github-plugin/)\r\n\r\nThis is a Jenkins plugin for [Violation Comments to GitHub Lib](https://github.com/tomasbjerre/violation-comments-to-github-lib). This plugin will find report files from static code analysis and comment GitHub pull requests with the content.\r\n\r\nYou can have a look at [violations-test](https://github.com/tomasbjerre/violations-test/pull/2) to see what the result may look like.\r\n\r\n* It supports these formats:\r\n  * FindBugs\r\n  * PMD\r\n  * CheckStyle\r\n  * CSSLint\r\n  * JSHint\r\n\r\nThere is also:\r\n * A [Gradle plugin](https://github.com/tomasbjerre/violation-comments-to-github-gradle-plugin).\r\n * A [Maven plugin](https://github.com/tomasbjerre/violation-comments-to-github-maven-plugin).\r\n\r\nAvailable in Jenkins [here](https://wiki.jenkins-ci.org/display/JENKINS/Violation+Comments+to+GitHub+Server+Plugin).\r\n\r\nYou will need to the **pull request id** for the pull request that was built. You may want to have a look at [GitHub Pull Request Builder Plugin](https://wiki.jenkins-ci.org/display/JENKINS/GitHub+pull+request+builder+plugin), it provides the environment variable `ghprbPullId`.\r\n\r\n# Screenshots\r\n\r\nWhen installed, a post build action will be available.\r\n\r\n![Post build action menu](https://github.com/tomasbjerre/violation-comments-to-github-jenkins-plugin/blob/master/sandbox/jenkins-postbuildmenu.png)\r\n\r\nThe configuration looks like this.\r\n\r\n![Post build action](https://github.com/tomasbjerre/violation-comments-to-github-jenkins-plugin/blob/master/sandbox/jenkins-postbuildaction.png)\r\n\r\nThe pull request will be commented like this.\r\n\r\n![Post build action](https://github.com/tomasbjerre/violation-comments-to-github-jenkins-plugin/blob/master/sandbox/findbugs-github-pr-file-comment.png)\r\n\r\n\r\n# Plugin development\r\nMore details on Jenkins plugin development is available [here](https://wiki.jenkins-ci.org/display/JENKINS/Plugin+tutorial).\r\n\r\nThere is a ```/build.sh``` that will perform a full build and test the plugin. You may have a look at sandbox/settings.xml on how to configure your Maven settings.\r\n\r\nA release is created like this. You need to clone from jenkinsci-repo, with https and have username/password in settings.xml.\r\n```\r\nmvn release:prepare release:perform\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}